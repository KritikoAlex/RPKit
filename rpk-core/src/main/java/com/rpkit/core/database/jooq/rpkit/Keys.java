/*
 * Copyright 2020 Ren Binden
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is generated by jOOQ.
*/
package com.rpkit.core.database.jooq;


import com.rpkit.core.database.jooq.tables.TableVersion;
import com.rpkit.core.database.jooq.tables.records.TableVersionRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>rpkit</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<TableVersionRecord, Integer> IDENTITY_TABLE_VERSION = Identities0.IDENTITY_TABLE_VERSION;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<TableVersionRecord> KEY_TABLE_VERSION_PRIMARY = UniqueKeys0.KEY_TABLE_VERSION_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<TableVersionRecord, Integer> IDENTITY_TABLE_VERSION = createIdentity(TableVersion.TABLE_VERSION, TableVersion.TABLE_VERSION.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<TableVersionRecord> KEY_TABLE_VERSION_PRIMARY = createUniqueKey(TableVersion.TABLE_VERSION, "KEY_table_version_PRIMARY", TableVersion.TABLE_VERSION.ID);
    }
}
