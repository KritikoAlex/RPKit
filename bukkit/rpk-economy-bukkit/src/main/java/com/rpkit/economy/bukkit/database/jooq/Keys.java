/*
 * Copyright 2020 Ren Binden
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is generated by jOOQ.
 */
package com.rpkit.economy.bukkit.database.jooq;


import com.rpkit.economy.bukkit.database.jooq.tables.RpkitCurrency;
import com.rpkit.economy.bukkit.database.jooq.tables.RpkitMoneyHidden;
import com.rpkit.economy.bukkit.database.jooq.tables.RpkitWallet;
import com.rpkit.economy.bukkit.database.jooq.tables.records.RpkitCurrencyRecord;
import com.rpkit.economy.bukkit.database.jooq.tables.records.RpkitMoneyHiddenRecord;
import com.rpkit.economy.bukkit.database.jooq.tables.records.RpkitWalletRecord;

import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>rpkit_economy</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<RpkitCurrencyRecord, Integer> IDENTITY_RPKIT_CURRENCY = Identities0.IDENTITY_RPKIT_CURRENCY;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<RpkitCurrencyRecord> KEY_RPKIT_CURRENCY_PRIMARY = UniqueKeys0.KEY_RPKIT_CURRENCY_PRIMARY;
    public static final UniqueKey<RpkitMoneyHiddenRecord> KEY_RPKIT_MONEY_HIDDEN_PRIMARY = UniqueKeys0.KEY_RPKIT_MONEY_HIDDEN_PRIMARY;
    public static final UniqueKey<RpkitMoneyHiddenRecord> KEY_RPKIT_MONEY_HIDDEN_RPKIT_MONEY_HIDDEN_CHARACTER_ID_UINDEX = UniqueKeys0.KEY_RPKIT_MONEY_HIDDEN_RPKIT_MONEY_HIDDEN_CHARACTER_ID_UINDEX;
    public static final UniqueKey<RpkitWalletRecord> KEY_RPKIT_WALLET_PRIMARY = UniqueKeys0.KEY_RPKIT_WALLET_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<RpkitCurrencyRecord, Integer> IDENTITY_RPKIT_CURRENCY = Internal.createIdentity(RpkitCurrency.RPKIT_CURRENCY, RpkitCurrency.RPKIT_CURRENCY.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<RpkitCurrencyRecord> KEY_RPKIT_CURRENCY_PRIMARY = Internal.createUniqueKey(RpkitCurrency.RPKIT_CURRENCY, "KEY_rpkit_currency_PRIMARY", new TableField[] { RpkitCurrency.RPKIT_CURRENCY.ID }, true);
        public static final UniqueKey<RpkitMoneyHiddenRecord> KEY_RPKIT_MONEY_HIDDEN_PRIMARY = Internal.createUniqueKey(RpkitMoneyHidden.RPKIT_MONEY_HIDDEN, "KEY_rpkit_money_hidden_PRIMARY", new TableField[] { RpkitMoneyHidden.RPKIT_MONEY_HIDDEN.CHARACTER_ID }, true);
        public static final UniqueKey<RpkitMoneyHiddenRecord> KEY_RPKIT_MONEY_HIDDEN_RPKIT_MONEY_HIDDEN_CHARACTER_ID_UINDEX = Internal.createUniqueKey(RpkitMoneyHidden.RPKIT_MONEY_HIDDEN, "KEY_rpkit_money_hidden_rpkit_money_hidden_character_id_uindex", new TableField[] { RpkitMoneyHidden.RPKIT_MONEY_HIDDEN.CHARACTER_ID }, true);
        public static final UniqueKey<RpkitWalletRecord> KEY_RPKIT_WALLET_PRIMARY = Internal.createUniqueKey(RpkitWallet.RPKIT_WALLET, "KEY_rpkit_wallet_PRIMARY", new TableField[] { RpkitWallet.RPKIT_WALLET.CHARACTER_ID, RpkitWallet.RPKIT_WALLET.CURRENCY_ID }, true);
    }
}
