/*
 * This file is generated by jOOQ.
*/
package com.rpkit.moderation.bukkit.database.jooq.rpkit.tables;


import com.rpkit.moderation.bukkit.database.jooq.rpkit.Indexes;
import com.rpkit.moderation.bukkit.database.jooq.rpkit.Keys;
import com.rpkit.moderation.bukkit.database.jooq.rpkit.Rpkit;
import com.rpkit.moderation.bukkit.database.jooq.rpkit.tables.records.RpkitTicketRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RpkitTicket extends TableImpl<RpkitTicketRecord> {

    private static final long serialVersionUID = -1080965809;

    /**
     * The reference instance of <code>rpkit.rpkit_ticket</code>
     */
    public static final RpkitTicket RPKIT_TICKET = new RpkitTicket();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RpkitTicketRecord> getRecordType() {
        return RpkitTicketRecord.class;
    }

    /**
     * The column <code>rpkit.rpkit_ticket.id</code>.
     */
    public final TableField<RpkitTicketRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>rpkit.rpkit_ticket.reason</code>.
     */
    public final TableField<RpkitTicketRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false), this, "");

    /**
     * The column <code>rpkit.rpkit_ticket.issuer_id</code>.
     */
    public final TableField<RpkitTicketRecord, Integer> ISSUER_ID = createField("issuer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rpkit.rpkit_ticket.resolver_id</code>.
     */
    public final TableField<RpkitTicketRecord, Integer> RESOLVER_ID = createField("resolver_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>rpkit.rpkit_ticket.world</code>.
     */
    public final TableField<RpkitTicketRecord, String> WORLD = createField("world", org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>rpkit.rpkit_ticket.x</code>.
     */
    public final TableField<RpkitTicketRecord, Double> X = createField("x", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>rpkit.rpkit_ticket.y</code>.
     */
    public final TableField<RpkitTicketRecord, Double> Y = createField("y", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>rpkit.rpkit_ticket.z</code>.
     */
    public final TableField<RpkitTicketRecord, Double> Z = createField("z", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>rpkit.rpkit_ticket.yaw</code>.
     */
    public final TableField<RpkitTicketRecord, Double> YAW = createField("yaw", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>rpkit.rpkit_ticket.pitch</code>.
     */
    public final TableField<RpkitTicketRecord, Double> PITCH = createField("pitch", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>rpkit.rpkit_ticket.open_date</code>.
     */
    public final TableField<RpkitTicketRecord, Timestamp> OPEN_DATE = createField("open_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>rpkit.rpkit_ticket.close_date</code>.
     */
    public final TableField<RpkitTicketRecord, Timestamp> CLOSE_DATE = createField("close_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>rpkit.rpkit_ticket.closed</code>.
     */
    public final TableField<RpkitTicketRecord, Byte> CLOSED = createField("closed", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * Create a <code>rpkit.rpkit_ticket</code> table reference
     */
    public RpkitTicket() {
        this(DSL.name("rpkit_ticket"), null);
    }

    /**
     * Create an aliased <code>rpkit.rpkit_ticket</code> table reference
     */
    public RpkitTicket(String alias) {
        this(DSL.name(alias), RPKIT_TICKET);
    }

    /**
     * Create an aliased <code>rpkit.rpkit_ticket</code> table reference
     */
    public RpkitTicket(Name alias) {
        this(alias, RPKIT_TICKET);
    }

    private RpkitTicket(Name alias, Table<RpkitTicketRecord> aliased) {
        this(alias, aliased, null);
    }

    private RpkitTicket(Name alias, Table<RpkitTicketRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Rpkit.RPKIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RPKIT_TICKET_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RpkitTicketRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RPKIT_TICKET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RpkitTicketRecord> getPrimaryKey() {
        return Keys.KEY_RPKIT_TICKET_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RpkitTicketRecord>> getKeys() {
        return Arrays.<UniqueKey<RpkitTicketRecord>>asList(Keys.KEY_RPKIT_TICKET_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitTicket as(String alias) {
        return new RpkitTicket(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitTicket as(Name alias) {
        return new RpkitTicket(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitTicket rename(String name) {
        return new RpkitTicket(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitTicket rename(Name name) {
        return new RpkitTicket(name, null);
    }
}
