/*
 * Copyright 2020 Ren Binden
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is generated by jOOQ.
 */
package com.rpkit.stores.bukkit.database.jooq;


import com.rpkit.stores.bukkit.database.jooq.tables.RpkitConsumablePurchase;
import com.rpkit.stores.bukkit.database.jooq.tables.RpkitConsumableStoreItem;
import com.rpkit.stores.bukkit.database.jooq.tables.RpkitPermanentPurchase;
import com.rpkit.stores.bukkit.database.jooq.tables.RpkitPermanentStoreItem;
import com.rpkit.stores.bukkit.database.jooq.tables.RpkitPurchase;
import com.rpkit.stores.bukkit.database.jooq.tables.RpkitStoreItem;
import com.rpkit.stores.bukkit.database.jooq.tables.RpkitTimedPurchase;
import com.rpkit.stores.bukkit.database.jooq.tables.RpkitTimedStoreItem;
import com.rpkit.stores.bukkit.database.jooq.tables.records.RpkitConsumablePurchaseRecord;
import com.rpkit.stores.bukkit.database.jooq.tables.records.RpkitConsumableStoreItemRecord;
import com.rpkit.stores.bukkit.database.jooq.tables.records.RpkitPermanentPurchaseRecord;
import com.rpkit.stores.bukkit.database.jooq.tables.records.RpkitPermanentStoreItemRecord;
import com.rpkit.stores.bukkit.database.jooq.tables.records.RpkitPurchaseRecord;
import com.rpkit.stores.bukkit.database.jooq.tables.records.RpkitStoreItemRecord;
import com.rpkit.stores.bukkit.database.jooq.tables.records.RpkitTimedPurchaseRecord;
import com.rpkit.stores.bukkit.database.jooq.tables.records.RpkitTimedStoreItemRecord;

import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>rpkit_stores</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<RpkitConsumablePurchaseRecord, Integer> IDENTITY_RPKIT_CONSUMABLE_PURCHASE = Identities0.IDENTITY_RPKIT_CONSUMABLE_PURCHASE;
    public static final Identity<RpkitConsumableStoreItemRecord, Integer> IDENTITY_RPKIT_CONSUMABLE_STORE_ITEM = Identities0.IDENTITY_RPKIT_CONSUMABLE_STORE_ITEM;
    public static final Identity<RpkitPermanentPurchaseRecord, Integer> IDENTITY_RPKIT_PERMANENT_PURCHASE = Identities0.IDENTITY_RPKIT_PERMANENT_PURCHASE;
    public static final Identity<RpkitPermanentStoreItemRecord, Integer> IDENTITY_RPKIT_PERMANENT_STORE_ITEM = Identities0.IDENTITY_RPKIT_PERMANENT_STORE_ITEM;
    public static final Identity<RpkitPurchaseRecord, Integer> IDENTITY_RPKIT_PURCHASE = Identities0.IDENTITY_RPKIT_PURCHASE;
    public static final Identity<RpkitStoreItemRecord, Integer> IDENTITY_RPKIT_STORE_ITEM = Identities0.IDENTITY_RPKIT_STORE_ITEM;
    public static final Identity<RpkitTimedPurchaseRecord, Integer> IDENTITY_RPKIT_TIMED_PURCHASE = Identities0.IDENTITY_RPKIT_TIMED_PURCHASE;
    public static final Identity<RpkitTimedStoreItemRecord, Integer> IDENTITY_RPKIT_TIMED_STORE_ITEM = Identities0.IDENTITY_RPKIT_TIMED_STORE_ITEM;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<RpkitConsumablePurchaseRecord> KEY_RPKIT_CONSUMABLE_PURCHASE_PRIMARY = UniqueKeys0.KEY_RPKIT_CONSUMABLE_PURCHASE_PRIMARY;
    public static final UniqueKey<RpkitConsumableStoreItemRecord> KEY_RPKIT_CONSUMABLE_STORE_ITEM_PRIMARY = UniqueKeys0.KEY_RPKIT_CONSUMABLE_STORE_ITEM_PRIMARY;
    public static final UniqueKey<RpkitPermanentPurchaseRecord> KEY_RPKIT_PERMANENT_PURCHASE_PRIMARY = UniqueKeys0.KEY_RPKIT_PERMANENT_PURCHASE_PRIMARY;
    public static final UniqueKey<RpkitPermanentStoreItemRecord> KEY_RPKIT_PERMANENT_STORE_ITEM_PRIMARY = UniqueKeys0.KEY_RPKIT_PERMANENT_STORE_ITEM_PRIMARY;
    public static final UniqueKey<RpkitPurchaseRecord> KEY_RPKIT_PURCHASE_PRIMARY = UniqueKeys0.KEY_RPKIT_PURCHASE_PRIMARY;
    public static final UniqueKey<RpkitStoreItemRecord> KEY_RPKIT_STORE_ITEM_PRIMARY = UniqueKeys0.KEY_RPKIT_STORE_ITEM_PRIMARY;
    public static final UniqueKey<RpkitTimedPurchaseRecord> KEY_RPKIT_TIMED_PURCHASE_PRIMARY = UniqueKeys0.KEY_RPKIT_TIMED_PURCHASE_PRIMARY;
    public static final UniqueKey<RpkitTimedStoreItemRecord> KEY_RPKIT_TIMED_STORE_ITEM_PRIMARY = UniqueKeys0.KEY_RPKIT_TIMED_STORE_ITEM_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<RpkitConsumablePurchaseRecord, Integer> IDENTITY_RPKIT_CONSUMABLE_PURCHASE = Internal.createIdentity(RpkitConsumablePurchase.RPKIT_CONSUMABLE_PURCHASE, RpkitConsumablePurchase.RPKIT_CONSUMABLE_PURCHASE.ID);
        public static Identity<RpkitConsumableStoreItemRecord, Integer> IDENTITY_RPKIT_CONSUMABLE_STORE_ITEM = Internal.createIdentity(RpkitConsumableStoreItem.RPKIT_CONSUMABLE_STORE_ITEM, RpkitConsumableStoreItem.RPKIT_CONSUMABLE_STORE_ITEM.ID);
        public static Identity<RpkitPermanentPurchaseRecord, Integer> IDENTITY_RPKIT_PERMANENT_PURCHASE = Internal.createIdentity(RpkitPermanentPurchase.RPKIT_PERMANENT_PURCHASE, RpkitPermanentPurchase.RPKIT_PERMANENT_PURCHASE.ID);
        public static Identity<RpkitPermanentStoreItemRecord, Integer> IDENTITY_RPKIT_PERMANENT_STORE_ITEM = Internal.createIdentity(RpkitPermanentStoreItem.RPKIT_PERMANENT_STORE_ITEM, RpkitPermanentStoreItem.RPKIT_PERMANENT_STORE_ITEM.ID);
        public static Identity<RpkitPurchaseRecord, Integer> IDENTITY_RPKIT_PURCHASE = Internal.createIdentity(RpkitPurchase.RPKIT_PURCHASE, RpkitPurchase.RPKIT_PURCHASE.ID);
        public static Identity<RpkitStoreItemRecord, Integer> IDENTITY_RPKIT_STORE_ITEM = Internal.createIdentity(RpkitStoreItem.RPKIT_STORE_ITEM, RpkitStoreItem.RPKIT_STORE_ITEM.ID);
        public static Identity<RpkitTimedPurchaseRecord, Integer> IDENTITY_RPKIT_TIMED_PURCHASE = Internal.createIdentity(RpkitTimedPurchase.RPKIT_TIMED_PURCHASE, RpkitTimedPurchase.RPKIT_TIMED_PURCHASE.ID);
        public static Identity<RpkitTimedStoreItemRecord, Integer> IDENTITY_RPKIT_TIMED_STORE_ITEM = Internal.createIdentity(RpkitTimedStoreItem.RPKIT_TIMED_STORE_ITEM, RpkitTimedStoreItem.RPKIT_TIMED_STORE_ITEM.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<RpkitConsumablePurchaseRecord> KEY_RPKIT_CONSUMABLE_PURCHASE_PRIMARY = Internal.createUniqueKey(RpkitConsumablePurchase.RPKIT_CONSUMABLE_PURCHASE, "KEY_rpkit_consumable_purchase_PRIMARY", new TableField[] { RpkitConsumablePurchase.RPKIT_CONSUMABLE_PURCHASE.ID }, true);
        public static final UniqueKey<RpkitConsumableStoreItemRecord> KEY_RPKIT_CONSUMABLE_STORE_ITEM_PRIMARY = Internal.createUniqueKey(RpkitConsumableStoreItem.RPKIT_CONSUMABLE_STORE_ITEM, "KEY_rpkit_consumable_store_item_PRIMARY", new TableField[] { RpkitConsumableStoreItem.RPKIT_CONSUMABLE_STORE_ITEM.ID }, true);
        public static final UniqueKey<RpkitPermanentPurchaseRecord> KEY_RPKIT_PERMANENT_PURCHASE_PRIMARY = Internal.createUniqueKey(RpkitPermanentPurchase.RPKIT_PERMANENT_PURCHASE, "KEY_rpkit_permanent_purchase_PRIMARY", new TableField[] { RpkitPermanentPurchase.RPKIT_PERMANENT_PURCHASE.ID }, true);
        public static final UniqueKey<RpkitPermanentStoreItemRecord> KEY_RPKIT_PERMANENT_STORE_ITEM_PRIMARY = Internal.createUniqueKey(RpkitPermanentStoreItem.RPKIT_PERMANENT_STORE_ITEM, "KEY_rpkit_permanent_store_item_PRIMARY", new TableField[] { RpkitPermanentStoreItem.RPKIT_PERMANENT_STORE_ITEM.ID }, true);
        public static final UniqueKey<RpkitPurchaseRecord> KEY_RPKIT_PURCHASE_PRIMARY = Internal.createUniqueKey(RpkitPurchase.RPKIT_PURCHASE, "KEY_rpkit_purchase_PRIMARY", new TableField[] { RpkitPurchase.RPKIT_PURCHASE.ID }, true);
        public static final UniqueKey<RpkitStoreItemRecord> KEY_RPKIT_STORE_ITEM_PRIMARY = Internal.createUniqueKey(RpkitStoreItem.RPKIT_STORE_ITEM, "KEY_rpkit_store_item_PRIMARY", new TableField[] { RpkitStoreItem.RPKIT_STORE_ITEM.ID }, true);
        public static final UniqueKey<RpkitTimedPurchaseRecord> KEY_RPKIT_TIMED_PURCHASE_PRIMARY = Internal.createUniqueKey(RpkitTimedPurchase.RPKIT_TIMED_PURCHASE, "KEY_rpkit_timed_purchase_PRIMARY", new TableField[] { RpkitTimedPurchase.RPKIT_TIMED_PURCHASE.ID }, true);
        public static final UniqueKey<RpkitTimedStoreItemRecord> KEY_RPKIT_TIMED_STORE_ITEM_PRIMARY = Internal.createUniqueKey(RpkitTimedStoreItem.RPKIT_TIMED_STORE_ITEM, "KEY_rpkit_timed_store_item_PRIMARY", new TableField[] { RpkitTimedStoreItem.RPKIT_TIMED_STORE_ITEM.ID }, true);
    }
}
