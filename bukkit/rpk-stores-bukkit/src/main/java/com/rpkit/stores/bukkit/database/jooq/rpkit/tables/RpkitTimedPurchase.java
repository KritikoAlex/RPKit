/*
 * This file is generated by jOOQ.
 */
package com.rpkit.stores.bukkit.database.jooq.rpkit.tables;


import com.rpkit.stores.bukkit.database.jooq.rpkit.Indexes;
import com.rpkit.stores.bukkit.database.jooq.rpkit.Keys;
import com.rpkit.stores.bukkit.database.jooq.rpkit.Rpkit;
import com.rpkit.stores.bukkit.database.jooq.rpkit.tables.records.RpkitTimedPurchaseRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RpkitTimedPurchase extends TableImpl<RpkitTimedPurchaseRecord> {

    private static final long serialVersionUID = -1282324675;

    /**
     * The reference instance of <code>rpkit.rpkit_timed_purchase</code>
     */
    public static final RpkitTimedPurchase RPKIT_TIMED_PURCHASE = new RpkitTimedPurchase();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RpkitTimedPurchaseRecord> getRecordType() {
        return RpkitTimedPurchaseRecord.class;
    }

    /**
     * The column <code>rpkit.rpkit_timed_purchase.id</code>.
     */
    public final TableField<RpkitTimedPurchaseRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>rpkit.rpkit_timed_purchase.purchase_id</code>.
     */
    public final TableField<RpkitTimedPurchaseRecord, Integer> PURCHASE_ID = createField("purchase_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>rpkit.rpkit_timed_purchase</code> table reference
     */
    public RpkitTimedPurchase() {
        this(DSL.name("rpkit_timed_purchase"), null);
    }

    /**
     * Create an aliased <code>rpkit.rpkit_timed_purchase</code> table reference
     */
    public RpkitTimedPurchase(String alias) {
        this(DSL.name(alias), RPKIT_TIMED_PURCHASE);
    }

    /**
     * Create an aliased <code>rpkit.rpkit_timed_purchase</code> table reference
     */
    public RpkitTimedPurchase(Name alias) {
        this(alias, RPKIT_TIMED_PURCHASE);
    }

    private RpkitTimedPurchase(Name alias, Table<RpkitTimedPurchaseRecord> aliased) {
        this(alias, aliased, null);
    }

    private RpkitTimedPurchase(Name alias, Table<RpkitTimedPurchaseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RpkitTimedPurchase(Table<O> child, ForeignKey<O, RpkitTimedPurchaseRecord> key) {
        super(child, key, RPKIT_TIMED_PURCHASE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Rpkit.RPKIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RPKIT_TIMED_PURCHASE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RpkitTimedPurchaseRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RPKIT_TIMED_PURCHASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RpkitTimedPurchaseRecord> getPrimaryKey() {
        return Keys.KEY_RPKIT_TIMED_PURCHASE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RpkitTimedPurchaseRecord>> getKeys() {
        return Arrays.<UniqueKey<RpkitTimedPurchaseRecord>>asList(Keys.KEY_RPKIT_TIMED_PURCHASE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitTimedPurchase as(String alias) {
        return new RpkitTimedPurchase(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitTimedPurchase as(Name alias) {
        return new RpkitTimedPurchase(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitTimedPurchase rename(String name) {
        return new RpkitTimedPurchase(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitTimedPurchase rename(Name name) {
        return new RpkitTimedPurchase(name, null);
    }
}
