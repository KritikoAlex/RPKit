/*
 * Copyright 2020 Ren Binden
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is generated by jOOQ.
 */
package com.rpkit.craftingskill.bukkit.database.jooq.tables;


import com.rpkit.craftingskill.bukkit.database.jooq.RpkitCraftingSkill;
import com.rpkit.craftingskill.bukkit.database.jooq.tables.records.RpkitCraftingExperienceRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RpkitCraftingExperience extends TableImpl<RpkitCraftingExperienceRecord> {

    private static final long serialVersionUID = -1390694774;

    /**
     * The reference instance of <code>rpkit_crafting_skill.rpkit_crafting_experience</code>
     */
    public static final RpkitCraftingExperience RPKIT_CRAFTING_EXPERIENCE = new RpkitCraftingExperience();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RpkitCraftingExperienceRecord> getRecordType() {
        return RpkitCraftingExperienceRecord.class;
    }

    /**
     * The column <code>rpkit_crafting_skill.rpkit_crafting_experience.character_id</code>.
     */
    public final TableField<RpkitCraftingExperienceRecord, Integer> CHARACTER_ID = createField(DSL.name("character_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rpkit_crafting_skill.rpkit_crafting_experience.action</code>.
     */
    public final TableField<RpkitCraftingExperienceRecord, String> ACTION = createField(DSL.name("action"), org.jooq.impl.SQLDataType.VARCHAR(8).nullable(false), this, "");

    /**
     * The column <code>rpkit_crafting_skill.rpkit_crafting_experience.material</code>.
     */
    public final TableField<RpkitCraftingExperienceRecord, String> MATERIAL = createField(DSL.name("material"), org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>rpkit_crafting_skill.rpkit_crafting_experience.experience</code>.
     */
    public final TableField<RpkitCraftingExperienceRecord, Integer> EXPERIENCE = createField(DSL.name("experience"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>rpkit_crafting_skill.rpkit_crafting_experience</code> table reference
     */
    public RpkitCraftingExperience() {
        this(DSL.name("rpkit_crafting_experience"), null);
    }

    /**
     * Create an aliased <code>rpkit_crafting_skill.rpkit_crafting_experience</code> table reference
     */
    public RpkitCraftingExperience(String alias) {
        this(DSL.name(alias), RPKIT_CRAFTING_EXPERIENCE);
    }

    /**
     * Create an aliased <code>rpkit_crafting_skill.rpkit_crafting_experience</code> table reference
     */
    public RpkitCraftingExperience(Name alias) {
        this(alias, RPKIT_CRAFTING_EXPERIENCE);
    }

    private RpkitCraftingExperience(Name alias, Table<RpkitCraftingExperienceRecord> aliased) {
        this(alias, aliased, null);
    }

    private RpkitCraftingExperience(Name alias, Table<RpkitCraftingExperienceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> RpkitCraftingExperience(Table<O> child, ForeignKey<O, RpkitCraftingExperienceRecord> key) {
        super(child, key, RPKIT_CRAFTING_EXPERIENCE);
    }

    @Override
    public Schema getSchema() {
        return RpkitCraftingSkill.RPKIT_CRAFTING_SKILL;
    }

    @Override
    public RpkitCraftingExperience as(String alias) {
        return new RpkitCraftingExperience(DSL.name(alias), this);
    }

    @Override
    public RpkitCraftingExperience as(Name alias) {
        return new RpkitCraftingExperience(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitCraftingExperience rename(String name) {
        return new RpkitCraftingExperience(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitCraftingExperience rename(Name name) {
        return new RpkitCraftingExperience(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
