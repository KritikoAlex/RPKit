/*
 * Copyright 2019 Ren Binden
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is generated by jOOQ.
 */
package com.rpkit.professions.bukkit.database.jooq.rpkit.tables;


import com.rpkit.professions.bukkit.database.jooq.rpkit.Indexes;
import com.rpkit.professions.bukkit.database.jooq.rpkit.Keys;
import com.rpkit.professions.bukkit.database.jooq.rpkit.Rpkit;
import com.rpkit.professions.bukkit.database.jooq.rpkit.tables.records.RpkitCharacterProfessionRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RpkitCharacterProfession extends TableImpl<RpkitCharacterProfessionRecord> {

    private static final long serialVersionUID = 1533794427;

    /**
     * The reference instance of <code>rpkit.rpkit_character_profession</code>
     */
    public static final RpkitCharacterProfession RPKIT_CHARACTER_PROFESSION = new RpkitCharacterProfession();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RpkitCharacterProfessionRecord> getRecordType() {
        return RpkitCharacterProfessionRecord.class;
    }

    /**
     * The column <code>rpkit.rpkit_character_profession.id</code>.
     */
    public final TableField<RpkitCharacterProfessionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>rpkit.rpkit_character_profession.character_id</code>.
     */
    public final TableField<RpkitCharacterProfessionRecord, Integer> CHARACTER_ID = createField("character_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rpkit.rpkit_character_profession.profession</code>.
     */
    public final TableField<RpkitCharacterProfessionRecord, String> PROFESSION = createField("profession", org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * Create a <code>rpkit.rpkit_character_profession</code> table reference
     */
    public RpkitCharacterProfession() {
        this(DSL.name("rpkit_character_profession"), null);
    }

    /**
     * Create an aliased <code>rpkit.rpkit_character_profession</code> table reference
     */
    public RpkitCharacterProfession(String alias) {
        this(DSL.name(alias), RPKIT_CHARACTER_PROFESSION);
    }

    /**
     * Create an aliased <code>rpkit.rpkit_character_profession</code> table reference
     */
    public RpkitCharacterProfession(Name alias) {
        this(alias, RPKIT_CHARACTER_PROFESSION);
    }

    private RpkitCharacterProfession(Name alias, Table<RpkitCharacterProfessionRecord> aliased) {
        this(alias, aliased, null);
    }

    private RpkitCharacterProfession(Name alias, Table<RpkitCharacterProfessionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RpkitCharacterProfession(Table<O> child, ForeignKey<O, RpkitCharacterProfessionRecord> key) {
        super(child, key, RPKIT_CHARACTER_PROFESSION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Rpkit.RPKIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RPKIT_CHARACTER_PROFESSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RpkitCharacterProfessionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RPKIT_CHARACTER_PROFESSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RpkitCharacterProfessionRecord> getPrimaryKey() {
        return Keys.KEY_RPKIT_CHARACTER_PROFESSION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RpkitCharacterProfessionRecord>> getKeys() {
        return Arrays.<UniqueKey<RpkitCharacterProfessionRecord>>asList(Keys.KEY_RPKIT_CHARACTER_PROFESSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitCharacterProfession as(String alias) {
        return new RpkitCharacterProfession(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitCharacterProfession as(Name alias) {
        return new RpkitCharacterProfession(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitCharacterProfession rename(String name) {
        return new RpkitCharacterProfession(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitCharacterProfession rename(Name name) {
        return new RpkitCharacterProfession(name, null);
    }
}
