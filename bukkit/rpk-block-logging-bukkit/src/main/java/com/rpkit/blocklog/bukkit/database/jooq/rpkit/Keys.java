/*
 * This file is generated by jOOQ.
*/
package com.rpkit.blocklog.bukkit.database.jooq.rpkit;


import com.rpkit.blocklog.bukkit.database.jooq.rpkit.tables.RpkitBlockChange;
import com.rpkit.blocklog.bukkit.database.jooq.rpkit.tables.RpkitBlockHistory;
import com.rpkit.blocklog.bukkit.database.jooq.rpkit.tables.RpkitBlockInventoryChange;
import com.rpkit.blocklog.bukkit.database.jooq.rpkit.tables.records.RpkitBlockChangeRecord;
import com.rpkit.blocklog.bukkit.database.jooq.rpkit.tables.records.RpkitBlockHistoryRecord;
import com.rpkit.blocklog.bukkit.database.jooq.rpkit.tables.records.RpkitBlockInventoryChangeRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>rpkit</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<RpkitBlockChangeRecord, Integer> IDENTITY_RPKIT_BLOCK_CHANGE = Identities0.IDENTITY_RPKIT_BLOCK_CHANGE;
    public static final Identity<RpkitBlockHistoryRecord, Integer> IDENTITY_RPKIT_BLOCK_HISTORY = Identities0.IDENTITY_RPKIT_BLOCK_HISTORY;
    public static final Identity<RpkitBlockInventoryChangeRecord, Integer> IDENTITY_RPKIT_BLOCK_INVENTORY_CHANGE = Identities0.IDENTITY_RPKIT_BLOCK_INVENTORY_CHANGE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<RpkitBlockChangeRecord> KEY_RPKIT_BLOCK_CHANGE_PRIMARY = UniqueKeys0.KEY_RPKIT_BLOCK_CHANGE_PRIMARY;
    public static final UniqueKey<RpkitBlockHistoryRecord> KEY_RPKIT_BLOCK_HISTORY_PRIMARY = UniqueKeys0.KEY_RPKIT_BLOCK_HISTORY_PRIMARY;
    public static final UniqueKey<RpkitBlockInventoryChangeRecord> KEY_RPKIT_BLOCK_INVENTORY_CHANGE_PRIMARY = UniqueKeys0.KEY_RPKIT_BLOCK_INVENTORY_CHANGE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<RpkitBlockChangeRecord, Integer> IDENTITY_RPKIT_BLOCK_CHANGE = createIdentity(RpkitBlockChange.RPKIT_BLOCK_CHANGE, RpkitBlockChange.RPKIT_BLOCK_CHANGE.ID);
        public static Identity<RpkitBlockHistoryRecord, Integer> IDENTITY_RPKIT_BLOCK_HISTORY = createIdentity(RpkitBlockHistory.RPKIT_BLOCK_HISTORY, RpkitBlockHistory.RPKIT_BLOCK_HISTORY.ID);
        public static Identity<RpkitBlockInventoryChangeRecord, Integer> IDENTITY_RPKIT_BLOCK_INVENTORY_CHANGE = createIdentity(RpkitBlockInventoryChange.RPKIT_BLOCK_INVENTORY_CHANGE, RpkitBlockInventoryChange.RPKIT_BLOCK_INVENTORY_CHANGE.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<RpkitBlockChangeRecord> KEY_RPKIT_BLOCK_CHANGE_PRIMARY = createUniqueKey(RpkitBlockChange.RPKIT_BLOCK_CHANGE, "KEY_rpkit_block_change_PRIMARY", RpkitBlockChange.RPKIT_BLOCK_CHANGE.ID);
        public static final UniqueKey<RpkitBlockHistoryRecord> KEY_RPKIT_BLOCK_HISTORY_PRIMARY = createUniqueKey(RpkitBlockHistory.RPKIT_BLOCK_HISTORY, "KEY_rpkit_block_history_PRIMARY", RpkitBlockHistory.RPKIT_BLOCK_HISTORY.ID);
        public static final UniqueKey<RpkitBlockInventoryChangeRecord> KEY_RPKIT_BLOCK_INVENTORY_CHANGE_PRIMARY = createUniqueKey(RpkitBlockInventoryChange.RPKIT_BLOCK_INVENTORY_CHANGE, "KEY_rpkit_block_inventory_change_PRIMARY", RpkitBlockInventoryChange.RPKIT_BLOCK_INVENTORY_CHANGE.ID);
    }
}
