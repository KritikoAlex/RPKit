/*
 * Copyright 2020 Ren Binden
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is generated by jOOQ.
 */
package com.rpkit.languages.bukkit.database.jooq.rpkit.tables.records;


import com.rpkit.languages.bukkit.database.jooq.rpkit.tables.RpkitCharacterLanguage;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RpkitCharacterLanguageRecord extends TableRecordImpl<RpkitCharacterLanguageRecord> implements Record4<Integer, Integer, String, Double> {

    private static final long serialVersionUID = 98735968;

    /**
     * Setter for <code>rpkit.rpkit_character_language.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_character_language.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>rpkit.rpkit_character_language.character_id</code>.
     */
    public void setCharacterId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_character_language.character_id</code>.
     */
    public Integer getCharacterId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>rpkit.rpkit_character_language.language_name</code>.
     */
    public void setLanguageName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_character_language.language_name</code>.
     */
    public String getLanguageName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>rpkit.rpkit_character_language.understanding</code>.
     */
    public void setUnderstanding(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_character_language.understanding</code>.
     */
    public Double getUnderstanding() {
        return (Double) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, String, Double> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, String, Double> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return RpkitCharacterLanguage.RPKIT_CHARACTER_LANGUAGE.ID;
    }

    @Override
    public Field<Integer> field2() {
        return RpkitCharacterLanguage.RPKIT_CHARACTER_LANGUAGE.CHARACTER_ID;
    }

    @Override
    public Field<String> field3() {
        return RpkitCharacterLanguage.RPKIT_CHARACTER_LANGUAGE.LANGUAGE_NAME;
    }

    @Override
    public Field<Double> field4() {
        return RpkitCharacterLanguage.RPKIT_CHARACTER_LANGUAGE.UNDERSTANDING;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getCharacterId();
    }

    @Override
    public String component3() {
        return getLanguageName();
    }

    @Override
    public Double component4() {
        return getUnderstanding();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getCharacterId();
    }

    @Override
    public String value3() {
        return getLanguageName();
    }

    @Override
    public Double value4() {
        return getUnderstanding();
    }

    @Override
    public RpkitCharacterLanguageRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public RpkitCharacterLanguageRecord value2(Integer value) {
        setCharacterId(value);
        return this;
    }

    @Override
    public RpkitCharacterLanguageRecord value3(String value) {
        setLanguageName(value);
        return this;
    }

    @Override
    public RpkitCharacterLanguageRecord value4(Double value) {
        setUnderstanding(value);
        return this;
    }

    @Override
    public RpkitCharacterLanguageRecord values(Integer value1, Integer value2, String value3, Double value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RpkitCharacterLanguageRecord
     */
    public RpkitCharacterLanguageRecord() {
        super(RpkitCharacterLanguage.RPKIT_CHARACTER_LANGUAGE);
    }

    /**
     * Create a detached, initialised RpkitCharacterLanguageRecord
     */
    public RpkitCharacterLanguageRecord(Integer id, Integer characterId, String languageName, Double understanding) {
        super(RpkitCharacterLanguage.RPKIT_CHARACTER_LANGUAGE);

        set(0, id);
        set(1, characterId);
        set(2, languageName);
        set(3, understanding);
    }
}
