/*
 * Copyright 2020 Ren Binden
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is generated by jOOQ.
*/
package com.rpkit.auctions.bukkit.database.jooq.rpkit.tables.records;


import com.rpkit.auctions.bukkit.database.jooq.rpkit.tables.RpkitAuction;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RpkitAuctionRecord extends UpdatableRecordImpl<RpkitAuctionRecord> implements Record17<Integer, byte[], Integer, String, Double, Double, Double, Double, Double, Integer, Long, Long, Integer, Integer, Integer, Integer, Byte> {

    private static final long serialVersionUID = -208774092;

    /**
     * Setter for <code>rpkit.rpkit_auction.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_auction.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>rpkit.rpkit_auction.item</code>.
     */
    public void setItem(byte... value) {
        set(1, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_auction.item</code>.
     */
    public byte[] getItem() {
        return (byte[]) get(1);
    }

    /**
     * Setter for <code>rpkit.rpkit_auction.currency_id</code>.
     */
    public void setCurrencyId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_auction.currency_id</code>.
     */
    public Integer getCurrencyId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>rpkit.rpkit_auction.world</code>.
     */
    public void setWorld(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_auction.world</code>.
     */
    public String getWorld() {
        return (String) get(3);
    }

    /**
     * Setter for <code>rpkit.rpkit_auction.x</code>.
     */
    public void setX(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_auction.x</code>.
     */
    public Double getX() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>rpkit.rpkit_auction.y</code>.
     */
    public void setY(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_auction.y</code>.
     */
    public Double getY() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>rpkit.rpkit_auction.z</code>.
     */
    public void setZ(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_auction.z</code>.
     */
    public Double getZ() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>rpkit.rpkit_auction.yaw</code>.
     */
    public void setYaw(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_auction.yaw</code>.
     */
    public Double getYaw() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>rpkit.rpkit_auction.pitch</code>.
     */
    public void setPitch(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_auction.pitch</code>.
     */
    public Double getPitch() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>rpkit.rpkit_auction.character_id</code>.
     */
    public void setCharacterId(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_auction.character_id</code>.
     */
    public Integer getCharacterId() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>rpkit.rpkit_auction.duration</code>.
     */
    public void setDuration(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_auction.duration</code>.
     */
    public Long getDuration() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>rpkit.rpkit_auction.end_time</code>.
     */
    public void setEndTime(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_auction.end_time</code>.
     */
    public Long getEndTime() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>rpkit.rpkit_auction.start_price</code>.
     */
    public void setStartPrice(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_auction.start_price</code>.
     */
    public Integer getStartPrice() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>rpkit.rpkit_auction.buy_out_price</code>.
     */
    public void setBuyOutPrice(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_auction.buy_out_price</code>.
     */
    public Integer getBuyOutPrice() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>rpkit.rpkit_auction.no_sell_price</code>.
     */
    public void setNoSellPrice(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_auction.no_sell_price</code>.
     */
    public Integer getNoSellPrice() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>rpkit.rpkit_auction.minimum_bid_increment</code>.
     */
    public void setMinimumBidIncrement(Integer value) {
        set(15, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_auction.minimum_bid_increment</code>.
     */
    public Integer getMinimumBidIncrement() {
        return (Integer) get(15);
    }

    /**
     * Setter for <code>rpkit.rpkit_auction.bidding_open</code>.
     */
    public void setBiddingOpen(Byte value) {
        set(16, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_auction.bidding_open</code>.
     */
    public Byte getBiddingOpen() {
        return (Byte) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row17<Integer, byte[], Integer, String, Double, Double, Double, Double, Double, Integer, Long, Long, Integer, Integer, Integer, Integer, Byte> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row17<Integer, byte[], Integer, String, Double, Double, Double, Double, Double, Integer, Long, Long, Integer, Integer, Integer, Integer, Byte> valuesRow() {
        return (Row17) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return RpkitAuction.RPKIT_AUCTION.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field2() {
        return RpkitAuction.RPKIT_AUCTION.ITEM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return RpkitAuction.RPKIT_AUCTION.CURRENCY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return RpkitAuction.RPKIT_AUCTION.WORLD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return RpkitAuction.RPKIT_AUCTION.X;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field6() {
        return RpkitAuction.RPKIT_AUCTION.Y;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field7() {
        return RpkitAuction.RPKIT_AUCTION.Z;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field8() {
        return RpkitAuction.RPKIT_AUCTION.YAW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field9() {
        return RpkitAuction.RPKIT_AUCTION.PITCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return RpkitAuction.RPKIT_AUCTION.CHARACTER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field11() {
        return RpkitAuction.RPKIT_AUCTION.DURATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field12() {
        return RpkitAuction.RPKIT_AUCTION.END_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field13() {
        return RpkitAuction.RPKIT_AUCTION.START_PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field14() {
        return RpkitAuction.RPKIT_AUCTION.BUY_OUT_PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field15() {
        return RpkitAuction.RPKIT_AUCTION.NO_SELL_PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field16() {
        return RpkitAuction.RPKIT_AUCTION.MINIMUM_BID_INCREMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field17() {
        return RpkitAuction.RPKIT_AUCTION.BIDDING_OPEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component2() {
        return getItem();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getCurrencyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getWorld();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component5() {
        return getX();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component6() {
        return getY();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component7() {
        return getZ();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component8() {
        return getYaw();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component9() {
        return getPitch();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component10() {
        return getCharacterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component11() {
        return getDuration();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component12() {
        return getEndTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component13() {
        return getStartPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component14() {
        return getBuyOutPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component15() {
        return getNoSellPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component16() {
        return getMinimumBidIncrement();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component17() {
        return getBiddingOpen();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value2() {
        return getItem();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCurrencyId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getWorld();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return getX();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value6() {
        return getY();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value7() {
        return getZ();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value8() {
        return getYaw();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value9() {
        return getPitch();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getCharacterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value11() {
        return getDuration();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value12() {
        return getEndTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value13() {
        return getStartPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value14() {
        return getBuyOutPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value15() {
        return getNoSellPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value16() {
        return getMinimumBidIncrement();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value17() {
        return getBiddingOpen();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitAuctionRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitAuctionRecord value2(byte... value) {
        setItem(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitAuctionRecord value3(Integer value) {
        setCurrencyId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitAuctionRecord value4(String value) {
        setWorld(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitAuctionRecord value5(Double value) {
        setX(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitAuctionRecord value6(Double value) {
        setY(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitAuctionRecord value7(Double value) {
        setZ(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitAuctionRecord value8(Double value) {
        setYaw(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitAuctionRecord value9(Double value) {
        setPitch(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitAuctionRecord value10(Integer value) {
        setCharacterId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitAuctionRecord value11(Long value) {
        setDuration(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitAuctionRecord value12(Long value) {
        setEndTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitAuctionRecord value13(Integer value) {
        setStartPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitAuctionRecord value14(Integer value) {
        setBuyOutPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitAuctionRecord value15(Integer value) {
        setNoSellPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitAuctionRecord value16(Integer value) {
        setMinimumBidIncrement(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitAuctionRecord value17(Byte value) {
        setBiddingOpen(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitAuctionRecord values(Integer value1, byte[] value2, Integer value3, String value4, Double value5, Double value6, Double value7, Double value8, Double value9, Integer value10, Long value11, Long value12, Integer value13, Integer value14, Integer value15, Integer value16, Byte value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RpkitAuctionRecord
     */
    public RpkitAuctionRecord() {
        super(RpkitAuction.RPKIT_AUCTION);
    }

    /**
     * Create a detached, initialised RpkitAuctionRecord
     */
    public RpkitAuctionRecord(Integer id, byte[] item, Integer currencyId, String world, Double x, Double y, Double z, Double yaw, Double pitch, Integer characterId, Long duration, Long endTime, Integer startPrice, Integer buyOutPrice, Integer noSellPrice, Integer minimumBidIncrement, Byte biddingOpen) {
        super(RpkitAuction.RPKIT_AUCTION);

        set(0, id);
        set(1, item);
        set(2, currencyId);
        set(3, world);
        set(4, x);
        set(5, y);
        set(6, z);
        set(7, yaw);
        set(8, pitch);
        set(9, characterId);
        set(10, duration);
        set(11, endTime);
        set(12, startPrice);
        set(13, buyOutPrice);
        set(14, noSellPrice);
        set(15, minimumBidIncrement);
        set(16, biddingOpen);
    }
}
