/*
 * Copyright 2020 Ren Binden
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.apache.tools.ant.filters.ReplaceTokens

def repoUserName = ""
def repoPassword = ""
def propertiesFile = new File("repo.properties")
if (propertiesFile.exists()) {
    def properties = new Properties()
    properties.load(new FileInputStream(propertiesFile))
    repoUserName = properties.getProperty("repo-username")
    repoPassword = properties.getProperty("repo-password")
}

dependencies {
    implementation group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8", version: "1.4.21"
    implementation group: "org.jetbrains.kotlin", name: "kotlin-reflect", version: "1.4.21"
    implementation group: "org.spigotmc", name: "spigot-api", version: "1.16.1-R0.1-SNAPSHOT"
    implementation group: "org.bstats", name: "bstats-bukkit", version: "1.7"
    implementation group: "org.pircbotx", name: "pircbotx", version: "2.1"
    implementation group: "org.jooq", name: "jooq", version: "3.13.2"
    implementation(group: "net.dv8tion", name: "JDA", version: "4.1.1_155") {
        exclude module: "opus-java"
    }
    implementation group: "org.slf4j", name: "slf4j-jdk14", version: "1.7.30"
    implementation project(":rpk-core")
    implementation project(":bukkit:rpk-core-bukkit")
    implementation project(":bukkit:rpk-player-lib-bukkit")
    implementation project(":bukkit:rpk-character-lib-bukkit")
    implementation project(":bukkit:rpk-permissions-lib-bukkit")
    implementation project(":bukkit:rpk-drink-lib-bukkit")
    implementation project(":bukkit:rpk-language-lib-bukkit")
    implementation project(":bukkit:rpk-chat-lib-bukkit")
}

processResources {
    filter ReplaceTokens, tokens: [
            "version": version
    ]
}

apply plugin: "com.github.johnrengelman.shadow"

shadowJar {

    dependencies {
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk8"))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib"))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib-common"))
        include(dependency("org.jetbrains:annotations"))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk7"))
        include(dependency("org.jetbrains.kotlin:kotlin-reflect"))
        include(dependency("org.bstats:bstats-bukkit"))
        include(dependency("org.pircbotx:pircbotx"))
        include(dependency("org.jooq:jooq"))
        include(dependency("org.reactivestreams:reactive-streams"))
        include(dependency("javax.xml.bind:jaxb-api"))
        include(dependency("javax.activation:javax.activation-api"))
        include(dependency("net.dv8tion:JDA"))
        include(dependency("com.google.code.findbugs:jsr305"))
        include(dependency("org.slf4j:slf4j-api"))
        include(dependency("org.slf4j:slf4j-jdk14"))
        include(dependency("com.neovisionaries:nv-websocket-client"))
        include(dependency("com.squareup.okhttp3:okhttp"))
        include(dependency("com.squareup.okio:okio"))
        include(dependency("org.apache.commons:commons-collections4"))
        include(dependency("net.sf.trove4j:trove4j"))
        include(dependency("com.fasterxml.jackson.core:jackson-databind"))
        include(dependency("com.fasterxml.jackson.core:jackson-annotations"))
        include(dependency("com.fasterxml.jackson.core:jackson-core"))

    }

    relocate "kotlin", "com.rpkit.chat.bukkit.shadow.impl.kotlin"
    relocate "org.jetbrains", "com.rpkit.chat.bukkit.shadow.impl.org.jetbrains"
    relocate "org.intellij", "com.rpkit.chat.bukkit.shadow.impl.org.intellij"
    relocate "com.iwebpp", "com.rpkit.chat.bukkit.shadow.impl.com.iwebpp"
    relocate "net.dv8tion", "com.rpkit.chat.bukkit.shadow.impl.net.dv8tion"
    relocate "com.fasterxml", "com.rpkit.chat.bukkit.shadow.impl.com.fasterxml"
    relocate "com.neovisionaries", "com.rpkit.chat.bukkit.shadow.impl.com.neovisionaries"
    relocate "gnu.trove", "com.rpkit.chat.bukkit.shadow.impl.gnu.trove"
    relocate "javax.annotation", "com.rpkit.chat.bukkit.shadow.impl.javax.annotation"
    relocate "okhttp3", "com.rpkit.chat.bukkit.shadow.impl.okhttp3"
    relocate "okio", "com.rpkit.chat.bukkit.shadow.impl.okio"
    relocate "org.slf4j", "com.rpkit.chat.bukkit.shadow.impl.org.slf4j"
    relocate "org.apache", "com.rpkit.chat.bukkit.shadow.impl.org.apache"
    relocate "org.bstats", "com.rpkit.chat.bukkit.shadow.impl.org.bstats"
    relocate "org.jooq", "com.rpkit.chat.bukkit.shadow.impl.org.jooq"
    relocate "org.reactivestreams", "com.rpkit.chat.bukkit.shadow.impl.org.reactivestreams"
    relocate "javax.xml.bind", "com.rpkit.chat.bukkit.shadow.impl.javax.xml.bind"
    relocate "javax.activation", "com.rpkit.chat.bukkit.shadow.impl.javax.activation"
    relocate "org.pircbotx", "com.rpkit.chat.bukkit.shadow.impl.org.pircbotx"

}

artifacts {
    archives shadowJar
}

uploadArchives {
    repositories.mavenDeployer {

        repository(url: "https://repo.rpkit.com/repository/maven-releases/") {
            authentication(userName: repoUserName, password: repoPassword)
        }

        pom.version = project(":bukkit:rpk-chat-bukkit").version
        pom.artifactId = project(":bukkit:rpk-chat-bukkit").name
        pom.groupId = project(":bukkit:rpk-chat-bukkit").group

    }
}