/*
 * Copyright 2018 Ross Binden
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is generated by jOOQ.
*/
package com.rpkit.unconsciousness.bukkit.database.jooq.rpkit.tables.records;


import com.rpkit.unconsciousness.bukkit.database.jooq.rpkit.tables.RpkitUnconsciousState;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RpkitUnconsciousStateRecord extends UpdatableRecordImpl<RpkitUnconsciousStateRecord> implements Record3<Integer, Integer, Timestamp> {

    private static final long serialVersionUID = 270019012;

    /**
     * Setter for <code>rpkit.rpkit_unconscious_state.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_unconscious_state.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>rpkit.rpkit_unconscious_state.character_id</code>.
     */
    public void setCharacterId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_unconscious_state.character_id</code>.
     */
    public Integer getCharacterId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>rpkit.rpkit_unconscious_state.death_time</code>.
     */
    public void setDeathTime(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>rpkit.rpkit_unconscious_state.death_time</code>.
     */
    public Timestamp getDeathTime() {
        return (Timestamp) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Timestamp> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Timestamp> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return RpkitUnconsciousState.RPKIT_UNCONSCIOUS_STATE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return RpkitUnconsciousState.RPKIT_UNCONSCIOUS_STATE.CHARACTER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return RpkitUnconsciousState.RPKIT_UNCONSCIOUS_STATE.DEATH_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getCharacterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getDeathTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getCharacterId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getDeathTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitUnconsciousStateRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitUnconsciousStateRecord value2(Integer value) {
        setCharacterId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitUnconsciousStateRecord value3(Timestamp value) {
        setDeathTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RpkitUnconsciousStateRecord values(Integer value1, Integer value2, Timestamp value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RpkitUnconsciousStateRecord
     */
    public RpkitUnconsciousStateRecord() {
        super(RpkitUnconsciousState.RPKIT_UNCONSCIOUS_STATE);
    }

    /**
     * Create a detached, initialised RpkitUnconsciousStateRecord
     */
    public RpkitUnconsciousStateRecord(Integer id, Integer characterId, Timestamp deathTime) {
        super(RpkitUnconsciousState.RPKIT_UNCONSCIOUS_STATE);

        set(0, id);
        set(1, characterId);
        set(2, deathTime);
    }
}
