/*
 * Copyright 2021 Ren Binden
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is generated by jOOQ.
 */
package com.rpkit.banks.bukkit.database.jooq.tables;


import com.rpkit.banks.bukkit.database.jooq.Keys;
import com.rpkit.banks.bukkit.database.jooq.RpkitBanks;
import com.rpkit.banks.bukkit.database.jooq.tables.records.RpkitBankRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RpkitBank extends TableImpl<RpkitBankRecord> {

    private static final long serialVersionUID = 119884373;

    /**
     * The reference instance of <code>rpkit_banks.rpkit_bank</code>
     */
    public static final RpkitBank RPKIT_BANK = new RpkitBank();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RpkitBankRecord> getRecordType() {
        return RpkitBankRecord.class;
    }

    /**
     * The column <code>rpkit_banks.rpkit_bank.character_id</code>.
     */
    public final TableField<RpkitBankRecord, Integer> CHARACTER_ID = createField(DSL.name("character_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>rpkit_banks.rpkit_bank.currency_name</code>.
     */
    public final TableField<RpkitBankRecord, String> CURRENCY_NAME = createField(DSL.name("currency_name"), org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>rpkit_banks.rpkit_bank.balance</code>.
     */
    public final TableField<RpkitBankRecord, Integer> BALANCE = createField(DSL.name("balance"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>rpkit_banks.rpkit_bank</code> table reference
     */
    public RpkitBank() {
        this(DSL.name("rpkit_bank"), null);
    }

    /**
     * Create an aliased <code>rpkit_banks.rpkit_bank</code> table reference
     */
    public RpkitBank(String alias) {
        this(DSL.name(alias), RPKIT_BANK);
    }

    /**
     * Create an aliased <code>rpkit_banks.rpkit_bank</code> table reference
     */
    public RpkitBank(Name alias) {
        this(alias, RPKIT_BANK);
    }

    private RpkitBank(Name alias, Table<RpkitBankRecord> aliased) {
        this(alias, aliased, null);
    }

    private RpkitBank(Name alias, Table<RpkitBankRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> RpkitBank(Table<O> child, ForeignKey<O, RpkitBankRecord> key) {
        super(child, key, RPKIT_BANK);
    }

    @Override
    public Schema getSchema() {
        return RpkitBanks.RPKIT_BANKS;
    }

    @Override
    public UniqueKey<RpkitBankRecord> getPrimaryKey() {
        return Keys.KEY_RPKIT_BANK_PRIMARY;
    }

    @Override
    public List<UniqueKey<RpkitBankRecord>> getKeys() {
        return Arrays.<UniqueKey<RpkitBankRecord>>asList(Keys.KEY_RPKIT_BANK_PRIMARY);
    }

    @Override
    public RpkitBank as(String alias) {
        return new RpkitBank(DSL.name(alias), this);
    }

    @Override
    public RpkitBank as(Name alias) {
        return new RpkitBank(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitBank rename(String name) {
        return new RpkitBank(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RpkitBank rename(Name name) {
        return new RpkitBank(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
